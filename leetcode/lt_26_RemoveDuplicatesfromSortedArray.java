/**
 * 解決從已排序陣列中移除重複項的問題。
 * 核心思路：使用快慢雙指針原地移除重複項。
 */
class Solution {
    /**
     * 從已排序陣列中移除重複項，使每個唯一元素只出現一次。
     *
     * @param nums 一個已排序的整數陣列
     * @return 移除重複項後，陣列中唯一元素的數量
     */
    public int removeDuplicates(int[] nums) {
        // 邊界情況：如果陣列為空，則沒有任何唯一元素。
        if (nums.length == 0) {
            return 0;
        }

        // 使用快慢雙指針法
        // 慢指針 i 用於追蹤下一個唯一元素的位置
        int i = 0;

        // 快指針 j 用於遍歷整個陣列
        for (int j = 1; j < nums.length; j++) {
            // 如果快指針指向的元素與慢指針指向的元素不同，
            // 則表示我們找到了一個新的唯一元素。
            if (nums[j] != nums[i]) {
                // 將慢指針向前移動一步
                i++;
                // 將這個新找到的唯一元素放到慢指針的位置
                nums[i] = nums[j];
            }
        }

        // i 是從 0 開始的索引，所以唯一元素的數量為 i + 1
        return i + 1;
    }
}
